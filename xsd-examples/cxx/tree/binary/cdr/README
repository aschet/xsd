This example shows how to save/load the object model to/from CDR
(Common Data Representation) binary format using ACE CDR streams.
Support for other data representation streams can be easily added. You
will need the ACE library[1] installed in order to build and run this
example.

[1] http://www.cs.wustl.edu/~schmidt/ACE.html

The example consists of the following files:

library.xsd
  XML Schema which describes a library of books.

library.xml
  Sample XML instance document.

library.hxx
library.cxx
  C++ types that represent the given vocabulary as well as data
  representation stream insertion and extraction operations.

  These files are generated by the XSD compiler from library.xsd using
  the following command line:

  xsd cxx-tree --generate-ostream \
      --generate-insertion 'ACE_OutputCDR' \
      --generate-extraction 'ACE_InputCDR' \
      --generate-comparison library.xsd

  Note that the --generate-insertion and --generate-extraction options
  are used to generate the insertion and extraction operations for ACE
  CDR stream.

driver.cxx
  Driver for the example. It first calls one of the parsing functions
  that constructs the object model from the input XML file. It then
  saves the object model to ACE_OuputCDR and loads it back from
  ACE_InputCDR. Additionally, it prints the resulting binary
  representation as well as the content of the object model before
  saving it to the CDR stream and after loading it from the CDR stream.

To compile and link the example manually from the command line we can use
the following commands (replace 'c++' with your C++ compiler name):

c++ -c library.cxx
c++ -c driver.cxx
c++ -o driver driver.o library.o -lACE -lxerces-c

To run the example on the sample XML instance document execute:

./driver library.xml
